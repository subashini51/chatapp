{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const {\n    username,\n    token\n  } = location.state || {};\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [chatType, setChatType] = useState('group');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [userStatuses, setUserStatuses] = useState({});\n  const [users, setUsers] = useState([]);\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    const fetchUserStatuses = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/user_status');\n        const data = await response.json();\n        setUserStatuses(data);\n      } catch (error) {\n        console.error('Error fetching user statuses:', error);\n      }\n    };\n    fetchUserStatuses();\n  }, []);\n  useEffect(() => {\n    if (username && token) {\n      const websocket = new WebSocket(`ws://127.0.0.1:8000/ws/${username}?token=${token}`);\n      websocketRef.current = websocket;\n      websocket.onopen = () => {\n        console.log('WebSocket connection opened');\n      };\n      websocket.onmessage = event => {\n        try {\n          const messageData = JSON.parse(event.data);\n          if (messageData.type === 'status') {\n            setUserStatuses(messageData.data);\n          } else if (messageData.type === 'message') {\n            setMessages(prevMessages => [...prevMessages, messageData.data]);\n          }\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      websocket.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n      websocket.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      return () => {\n        if (websocketRef.current) {\n          websocketRef.current.close();\n        }\n      };\n    }\n  }, [username, token]);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/users');\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const sendMessage = () => {\n    if (input.trim() === '') return;\n    const ws = websocketRef.current;\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      try {\n        const message = chatType === 'one-to-one' && selectedUser ? `${selectedUser}:${input}` : input;\n        ws.send(message);\n        setInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            setChatType('one-to-one');\n            setSelectedUser(user);\n          },\n          children: [user, \" (\", userStatuses[user], \")\"]\n        }, user, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"4oW3hSPNZ1d96hQXvAaAINedvRQ=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","jsxDEV","_jsxDEV","Chat","_s","location","username","token","state","messages","setMessages","input","setInput","chatType","setChatType","selectedUser","setSelectedUser","userStatuses","setUserStatuses","users","setUsers","websocketRef","fetchUserStatuses","response","fetch","data","json","error","console","websocket","WebSocket","current","onopen","log","onmessage","event","messageData","JSON","parse","type","prevMessages","onclose","onerror","close","fetchUsers","sendMessage","trim","ws","readyState","OPEN","message","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","index","value","onChange","e","target","onKeyPress","key","placeholder","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n    const location = useLocation();\r\n    const { username, token } = location.state || {};\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [chatType, setChatType] = useState('group');\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [userStatuses, setUserStatuses] = useState({});\r\n    const [users, setUsers] = useState([]);\r\n    const websocketRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserStatuses = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/user_status');\r\n                const data = await response.json();\r\n                setUserStatuses(data);\r\n            } catch (error) {\r\n                console.error('Error fetching user statuses:', error);\r\n            }\r\n        };\r\n\r\n        fetchUserStatuses();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (username && token) {\r\n            const websocket = new WebSocket(`ws://127.0.0.1:8000/ws/${username}?token=${token}`);\r\n            websocketRef.current = websocket;\r\n\r\n            websocket.onopen = () => {\r\n                console.log('WebSocket connection opened');\r\n            };\r\n\r\n            websocket.onmessage = (event) => {\r\n                try {\r\n                    const messageData = JSON.parse(event.data);\r\n                    if (messageData.type === 'status') {\r\n                        setUserStatuses(messageData.data);\r\n                    } else if (messageData.type === 'message') {\r\n                        setMessages((prevMessages) => [...prevMessages, messageData.data]);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error parsing WebSocket message:', error);\r\n                }\r\n            };\r\n\r\n            websocket.onclose = () => {\r\n                console.log('WebSocket connection closed');\r\n            };\r\n\r\n            websocket.onerror = (error) => {\r\n                console.error('WebSocket error:', error);\r\n            };\r\n\r\n            return () => {\r\n                if (websocketRef.current) {\r\n                    websocketRef.current.close();\r\n                }\r\n            };\r\n        }\r\n    }, [username, token]);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/users');\r\n                const data = await response.json();\r\n                setUsers(data);\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() === '') return;\r\n\r\n        const ws = websocketRef.current;\r\n        if (ws && ws.readyState === WebSocket.OPEN) {\r\n            try {\r\n                const message = chatType === 'one-to-one' && selectedUser\r\n                    ? `${selectedUser}:${input}`\r\n                    : input;\r\n                ws.send(message);\r\n                setInput('');\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"user-list\">\r\n                <h3>Users</h3>\r\n                <ul>\r\n                    {users.map((user) => (\r\n                        <li\r\n                            key={user}\r\n                            onClick={() => {\r\n                                setChatType('one-to-one');\r\n                                setSelectedUser(user);\r\n                            }}\r\n                        >\r\n                            {user} ({userStatuses[user]})\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"chat-box\">\r\n                <div className=\"messages\">\r\n                    {messages.map((message, index) => (\r\n                        <div key={index} className=\"message\">\r\n                            {message}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n                    placeholder=\"Type a message...\"\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,QAAQ;IAAEC;EAAM,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI,CAAC,CAAC;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMuB,YAAY,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAEjCF,SAAS,CAAC,MAAM;IACZ,MAAMyB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCR,eAAe,CAACO,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAEDL,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACZ,IAAIS,QAAQ,IAAIC,KAAK,EAAE;MACnB,MAAMsB,SAAS,GAAG,IAAIC,SAAS,CAAC,0BAA0BxB,QAAQ,UAAUC,KAAK,EAAE,CAAC;MACpFc,YAAY,CAACU,OAAO,GAAGF,SAAS;MAEhCA,SAAS,CAACG,MAAM,GAAG,MAAM;QACrBJ,OAAO,CAACK,GAAG,CAAC,6BAA6B,CAAC;MAC9C,CAAC;MAEDJ,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;QAC7B,IAAI;UACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACV,IAAI,CAAC;UAC1C,IAAIW,WAAW,CAACG,IAAI,KAAK,QAAQ,EAAE;YAC/BrB,eAAe,CAACkB,WAAW,CAACX,IAAI,CAAC;UACrC,CAAC,MAAM,IAAIW,WAAW,CAACG,IAAI,KAAK,SAAS,EAAE;YACvC7B,WAAW,CAAE8B,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,WAAW,CAACX,IAAI,CAAC,CAAC;UACtE;QACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC5D;MACJ,CAAC;MAEDE,SAAS,CAACY,OAAO,GAAG,MAAM;QACtBb,OAAO,CAACK,GAAG,CAAC,6BAA6B,CAAC;MAC9C,CAAC;MAEDJ,SAAS,CAACa,OAAO,GAAIf,KAAK,IAAK;QAC3BC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC5C,CAAC;MAED,OAAO,MAAM;QACT,IAAIN,YAAY,CAACU,OAAO,EAAE;UACtBV,YAAY,CAACU,OAAO,CAACY,KAAK,CAAC,CAAC;QAChC;MACJ,CAAC;IACL;EACJ,CAAC,EAAE,CAACrC,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAErBV,SAAS,CAAC,MAAM;IACZ,MAAM+C,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCN,QAAQ,CAACK,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDiB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIlC,KAAK,CAACmC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAEzB,MAAMC,EAAE,GAAG1B,YAAY,CAACU,OAAO;IAC/B,IAAIgB,EAAE,IAAIA,EAAE,CAACC,UAAU,KAAKlB,SAAS,CAACmB,IAAI,EAAE;MACxC,IAAI;QACA,MAAMC,OAAO,GAAGrC,QAAQ,KAAK,YAAY,IAAIE,YAAY,GACnD,GAAGA,YAAY,IAAIJ,KAAK,EAAE,GAC1BA,KAAK;QACXoC,EAAE,CAACI,IAAI,CAACD,OAAO,CAAC;QAChBtC,QAAQ,CAAC,EAAE,CAAC;MAChB,CAAC,CAAC,OAAOe,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAKkD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BnD,OAAA;MAAKkD,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBnD,OAAA;QAAAmD,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdvD,OAAA;QAAAmD,QAAA,EACKlC,KAAK,CAACuC,GAAG,CAAEC,IAAI,iBACZzD,OAAA;UAEI0D,OAAO,EAAEA,CAAA,KAAM;YACX9C,WAAW,CAAC,YAAY,CAAC;YACzBE,eAAe,CAAC2C,IAAI,CAAC;UACzB,CAAE;UAAAN,QAAA,GAEDM,IAAI,EAAC,IAAE,EAAC1C,YAAY,CAAC0C,IAAI,CAAC,EAAC,GAChC;QAAA,GAPSA,IAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOT,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNvD,OAAA;MAAKkD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBnD,OAAA;QAAKkD,SAAS,EAAC,UAAU;QAAAC,QAAA,EACpB5C,QAAQ,CAACiD,GAAG,CAAC,CAACR,OAAO,EAAEW,KAAK,kBACzB3D,OAAA;UAAiBkD,SAAS,EAAC,SAAS;UAAAC,QAAA,EAC/BH;QAAO,GADFW,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNvD,OAAA;QACIqC,IAAI,EAAC,MAAM;QACXuB,KAAK,EAAEnD,KAAM;QACboD,QAAQ,EAAGC,CAAC,IAAKpD,QAAQ,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAItB,WAAW,CAAC,CAAE;QACtDuB,WAAW,EAAC;MAAmB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFvD,OAAA;QAAQ0D,OAAO,EAAEf,WAAY;QAAAQ,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrD,EAAA,CAnIID,IAAI;EAAA,QACWH,WAAW;AAAA;AAAAqE,EAAA,GAD1BlE,IAAI;AAqIV,eAAeA,IAAI;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}