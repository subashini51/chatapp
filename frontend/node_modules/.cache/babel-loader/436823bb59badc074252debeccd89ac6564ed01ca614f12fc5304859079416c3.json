{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const {\n    username,\n    token\n  } = location.state || {};\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [userStatuses, setUserStatuses] = useState({});\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    const fetchUserStatuses = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/user_status');\n        const data = await response.json();\n        setUserStatuses(data);\n      } catch (error) {\n        console.error('Error fetching user statuses:', error);\n      }\n    };\n    fetchUserStatuses();\n  }, []);\n  useEffect(() => {\n    const connectWebSocket = () => {\n      if (username && token) {\n        const websocket = new WebSocket(`ws://127.0.0.1:8000/ws/${username}?token=${token}`);\n        websocketRef.current = websocket;\n        websocket.onopen = () => {\n          console.log('WebSocket connection opened');\n        };\n        websocket.onmessage = event => {\n          try {\n            const messageData = JSON.parse(event.data);\n            if (messageData.type === 'status') {\n              setUserStatuses(messageData.data);\n            } else if (messageData.type === 'message') {\n              setMessages(prevMessages => [...prevMessages, messageData.data]);\n            }\n          } catch (error) {\n            console.error('Error parsing WebSocket message:', error);\n          }\n        };\n        websocket.onclose = () => {\n          console.log('WebSocket connection closed, attempting to reconnect');\n          setTimeout(connectWebSocket, 1000);\n        };\n        websocket.onerror = error => {\n          console.error('WebSocket error:', error);\n        };\n        window.addEventListener('beforeunload', () => {\n          if (websocketRef.current) {\n            websocketRef.current.close();\n          }\n        });\n        return () => {\n          if (websocketRef.current) {\n            websocketRef.current.close();\n          }\n        };\n      }\n    };\n    connectWebSocket();\n  }, [username, token]);\n  const sendMessage = () => {\n    if (input.trim() === '') return;\n    const ws = websocketRef.current;\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      try {\n        const message = input;\n        ws.send(message);\n        setMessages(prevMessages => [...prevMessages, `You: ${input}`]);\n        setInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"user-list\",\n        children: Object.keys(userStatuses).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: userStatuses[user] === 'online' ? 'online' : 'offline',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-dot ${userStatuses[user]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), user]\n        }, user, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"mBzn8f+gKvdfVQ0fuV8jcRTSZIw=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","jsxDEV","_jsxDEV","Chat","_s","location","username","token","state","messages","setMessages","input","setInput","userStatuses","setUserStatuses","websocketRef","fetchUserStatuses","response","fetch","data","json","error","console","connectWebSocket","websocket","WebSocket","current","onopen","log","onmessage","event","messageData","JSON","parse","type","prevMessages","onclose","setTimeout","onerror","window","addEventListener","close","sendMessage","trim","ws","readyState","OPEN","message","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","user","index","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n    const location = useLocation();\r\n    const { username, token } = location.state || {};\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [userStatuses, setUserStatuses] = useState({});\r\n    const websocketRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserStatuses = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/user_status');\r\n                const data = await response.json();\r\n                setUserStatuses(data);\r\n            } catch (error) {\r\n                console.error('Error fetching user statuses:', error);\r\n            }\r\n        };\r\n\r\n        fetchUserStatuses();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const connectWebSocket = () => {\r\n            if (username && token) {\r\n                const websocket = new WebSocket(`ws://127.0.0.1:8000/ws/${username}?token=${token}`);\r\n                websocketRef.current = websocket;\r\n\r\n                websocket.onopen = () => {\r\n                    console.log('WebSocket connection opened');\r\n                };\r\n\r\n                websocket.onmessage = (event) => {\r\n                    try {\r\n                        const messageData = JSON.parse(event.data);\r\n                        if (messageData.type === 'status') {\r\n                            setUserStatuses(messageData.data);\r\n                        } else if (messageData.type === 'message') {\r\n                            setMessages((prevMessages) => [...prevMessages, messageData.data]);\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error parsing WebSocket message:', error);\r\n                    }\r\n                };\r\n\r\n                websocket.onclose = () => {\r\n                    console.log('WebSocket connection closed, attempting to reconnect');\r\n                    setTimeout(connectWebSocket, 1000);\r\n                };\r\n\r\n                websocket.onerror = (error) => {\r\n                    console.error('WebSocket error:', error);\r\n                };\r\n\r\n                window.addEventListener('beforeunload', () => {\r\n                    if (websocketRef.current) {\r\n                        websocketRef.current.close();\r\n                    }\r\n                });\r\n\r\n                return () => {\r\n                    if (websocketRef.current) {\r\n                        websocketRef.current.close();\r\n                    }\r\n                };\r\n            }\r\n        };\r\n\r\n        connectWebSocket();\r\n    }, [username, token]);\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() === '') return;\r\n\r\n        const ws = websocketRef.current;\r\n        if (ws && ws.readyState === WebSocket.OPEN) {\r\n            try {\r\n                const message = input;\r\n                ws.send(message);\r\n                setMessages((prevMessages) => [...prevMessages, `You: ${input}`]);\r\n                setInput('');\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"sidebar\">\r\n                <h3>Users</h3>\r\n                <ul className=\"user-list\">\r\n                    {Object.keys(userStatuses).map((user) => (\r\n                        <li key={user} className={userStatuses[user] === 'online' ? 'online' : 'offline'}>\r\n                            <span className={`status-dot ${userStatuses[user]}`}></span>\r\n                            {user}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"chat-box\">\r\n                <div className=\"messages\">\r\n                    {messages.map((message, index) => (\r\n                        <div key={index} className=\"message\">\r\n                            {message}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"input-box\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}