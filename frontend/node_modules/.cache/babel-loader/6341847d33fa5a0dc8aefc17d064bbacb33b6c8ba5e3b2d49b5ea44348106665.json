{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const {\n    username,\n    token\n  } = location.state || {};\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    if (username && token) {\n      const websocket = new WebSocket(`ws://127.0.0.1:8000/ws/${username}?token=${token}`);\n      websocket.onopen = () => console.log('WebSocket connection opened');\n      websocket.onmessage = event => {\n        setMessages(prevMessages => [...prevMessages, event.data]);\n      };\n      websocket.onclose = () => console.log('WebSocket connection closed');\n      websocket.onerror = error => console.error('WebSocket error:', error);\n      setWs(websocket);\n      return () => websocket.close();\n    }\n  }, [username, token]);\n  const sendMessage = () => {\n    if (ws && input.trim() !== '') {\n      const recipient = selectedUser ? selectedUser : \"group\"; // Use \"group\" for group chat\n      try {\n        ws.send(`${recipient}:${input}`);\n        setInput('');\n      } catch (error) {\n        console.error('Send error:', error);\n      }\n    } else {\n      console.error('WebSocket not initialized or message input is empty');\n    }\n  };\n  const handleUserClick = user => {\n    setSelectedUser(user);\n    setMessages([]); // Clear messages for new chat\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserClick(null),\n        children: \"Group Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserClick(\"user1\"),\n        children: \"One-to-One Chat with user1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserClick(\"user2\"),\n        children: \"One-to-One Chat with user2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserClick(\"user3\"),\n        children: \"One-to-One Chat with user3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedUser ? `Chat with ${selectedUser}` : 'Group Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.startsWith(username) ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"lB0jUZqhPGKg2dbdIHQlQU9G4gc=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Chat","_s","location","username","token","state","messages","setMessages","input","setInput","selectedUser","setSelectedUser","ws","setWs","websocket","WebSocket","onopen","console","log","onmessage","event","prevMessages","data","onclose","onerror","error","close","sendMessage","trim","recipient","send","handleUserClick","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","startsWith","type","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n    const location = useLocation();\r\n    const { username, token } = location.state || {};\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [ws, setWs] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (username && token) {\r\n            const websocket = new WebSocket(`ws://127.0.0.1:8000/ws/${username}?token=${token}`);\r\n            websocket.onopen = () => console.log('WebSocket connection opened');\r\n            websocket.onmessage = (event) => {\r\n                setMessages((prevMessages) => [...prevMessages, event.data]);\r\n            };\r\n            websocket.onclose = () => console.log('WebSocket connection closed');\r\n            websocket.onerror = (error) => console.error('WebSocket error:', error);\r\n            setWs(websocket);\r\n            return () => websocket.close();\r\n        }\r\n    }, [username, token]);\r\n\r\n    const sendMessage = () => {\r\n        if (ws && input.trim() !== '') {\r\n            const recipient = selectedUser ? selectedUser : \"group\"; // Use \"group\" for group chat\r\n            try {\r\n                ws.send(`${recipient}:${input}`);\r\n                setInput('');\r\n            } catch (error) {\r\n                console.error('Send error:', error);\r\n            }\r\n        } else {\r\n            console.error('WebSocket not initialized or message input is empty');\r\n        }\r\n    };\r\n\r\n    const handleUserClick = (user) => {\r\n        setSelectedUser(user);\r\n        setMessages([]); // Clear messages for new chat\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"sidebar\">\r\n                <h3>Users</h3>\r\n                <button onClick={() => handleUserClick(null)}>Group Chat</button>\r\n                <button onClick={() => handleUserClick(\"user1\")}>One-to-One Chat with user1</button>\r\n                <button onClick={() => handleUserClick(\"user2\")}>One-to-One Chat with user2</button>\r\n                <button onClick={() => handleUserClick(\"user3\")}>One-to-One Chat with user3</button>\r\n            </div>\r\n            <div className=\"chat-content\">\r\n                <div className=\"chat-header\">\r\n                    <h2>{selectedUser ? `Chat with ${selectedUser}` : 'Group Chat'}</h2>\r\n                </div>\r\n                <div className=\"chat-body\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.startsWith(username) ? 'sent' : 'received'}`}>\r\n                            <div className=\"content\">{msg}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"message-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            if (e.key === 'Enter') sendMessage();\r\n                        }}\r\n                    />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}