{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { WebSocketContext } from '../WebSocketContext';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  username\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    ws,\n    userStatus\n  } = useContext(WebSocketContext);\n  useEffect(() => {\n    if (ws) {\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'message') {\n          setMessages(prevMessages => [...prevMessages, data.data]);\n        } else if (data.type === 'status') {\n          // Handle user status updates if needed\n        }\n      };\n    }\n  }, [ws]);\n  const sendMessage = () => {\n    if (ws && message) {\n      ws.send(message);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat as \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"FqJwaADAwalejg8eyyPxAHkasr8=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useContext","WebSocketContext","Message","jsxDEV","_jsxDEV","ChatBox","username","_s","message","setMessage","messages","setMessages","ws","userStatus","onmessage","event","data","JSON","parse","type","prevMessages","sendMessage","send","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","text","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { WebSocketContext } from '../WebSocketContext';\r\nimport Message from './Message';\r\n\r\nconst ChatBox = ({ username }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const { ws, userStatus } = useContext(WebSocketContext);\r\n\r\n  useEffect(() => {\r\n    if (ws) {\r\n      ws.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === 'message') {\r\n          setMessages((prevMessages) => [...prevMessages, data.data]);\r\n        } else if (data.type === 'status') {\r\n          // Handle user status updates if needed\r\n        }\r\n      };\r\n    }\r\n  }, [ws]);\r\n\r\n  const sendMessage = () => {\r\n    if (ws && message) {\r\n      ws.send(message);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat as {username}</h2>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <Message key={index} text={msg} />\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type a message\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEc,EAAE;IAAEC;EAAW,CAAC,GAAGb,UAAU,CAACC,gBAAgB,CAAC;EAEvDF,SAAS,CAAC,MAAM;IACd,IAAIa,EAAE,EAAE;MACNA,EAAE,CAACE,SAAS,GAAIC,KAAK,IAAK;QACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACnC,IAAIA,IAAI,CAACG,IAAI,KAAK,SAAS,EAAE;UAC3BR,WAAW,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,IAAI,CAACA,IAAI,CAAC,CAAC;QAC7D,CAAC,MAAM,IAAIA,IAAI,CAACG,IAAI,KAAK,QAAQ,EAAE;UACjC;QAAA;MAEJ,CAAC;IACH;EACF,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIT,EAAE,IAAIJ,OAAO,EAAE;MACjBI,EAAE,CAACU,IAAI,CAACd,OAAO,CAAC;MAChBC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,GAAI,UAAQ,EAACjB,QAAQ;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3BvB,OAAA;MAAAmB,QAAA,EACGb,QAAQ,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB1B,OAAA,CAACF,OAAO;QAAa6B,IAAI,EAAEF;MAAI,GAAjBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MACEe,IAAI,EAAC,MAAM;MACXa,KAAK,EAAExB,OAAQ;MACfyB,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAgB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFvB,OAAA;MAAQiC,OAAO,EAAEhB,WAAY;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1CIF,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}