{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\GroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './GroupChat.css';\n\n// eslint-disable-next-line no-unused-vars\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupMembers = ['leesa', 'mohendran', 'deepan', 'sathish'];\nconst GroupChat = () => {\n  _s();\n  const location = useLocation();\n  const {\n    username\n  } = location.state || {};\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  // eslint-disable-next-line no-unused-vars\n  const [userStatuses, setUserStatuses] = useState({});\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    fetchUserStatuses();\n    fetchGroupMessages();\n    const ws = new WebSocket(`ws://localhost:8000/ws/${username}`);\n    websocketRef.current = ws;\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'message') {\n        setMessages(prevMessages => [...prevMessages, data.data]);\n      } else if (data.type === 'status') {\n        updateUserStatus(data.data);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) {\n        ws.close();\n      }\n    };\n  }, [username]);\n  const fetchUserStatuses = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/user_status');\n      const data = await response.json();\n      if (data && typeof data === 'object') {\n        setUserStatuses(data);\n      } else {\n        console.error('Invalid user status data:', data);\n      }\n    } catch (error) {\n      console.error('Error fetching user statuses:', error);\n    }\n  };\n  const fetchGroupMessages = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/group_messages/opcode_convo');\n      const data = await response.json();\n      if (data && data.messages) {\n        setMessages(data.messages);\n      }\n    } catch (error) {\n      console.error('Error fetching group messages:', error);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (newMessage.trim() !== '') {\n      const message = {\n        user: username,\n        text: newMessage.trim(),\n        type: 'group',\n        room: 'opcode convo'\n      };\n      if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n        websocketRef.current.send(JSON.stringify(message));\n        console.log('Sent message:', message);\n        setMessages(prevMessages => [...prevMessages, message]);\n        setNewMessage(''); // Clear input after sending\n      } else {\n        console.error('WebSocket connection is not open');\n      }\n    }\n  };\n  const updateUserStatus = statusData => {\n    setUserStatuses(prevStatuses => ({\n      ...prevStatuses,\n      ...statusData\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Group Chat: opcode convo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), \" \", message.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupChat, \"z6pJEEc1OOmjL4D4WU4E8EWux50=\", false, function () {\n  return [useLocation];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","jsxDEV","_jsxDEV","groupMembers","GroupChat","_s","location","username","state","messages","setMessages","newMessage","setNewMessage","userStatuses","setUserStatuses","websocketRef","fetchUserStatuses","fetchGroupMessages","ws","WebSocket","current","onopen","console","log","onmessage","event","data","JSON","parse","type","prevMessages","updateUserStatus","onclose","onerror","error","readyState","OPEN","close","response","fetch","json","handleSendMessage","trim","message","user","text","room","send","stringify","statusData","prevStatuses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/GroupChat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './GroupChat.css';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst groupMembers = ['leesa', 'mohendran', 'deepan', 'sathish'];\r\n\r\nconst GroupChat = () => {\r\n    const location = useLocation();\r\n    const { username } = location.state || {};\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [userStatuses, setUserStatuses] = useState({});\r\n    const websocketRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fetchUserStatuses();\r\n        fetchGroupMessages();\r\n\r\n        const ws = new WebSocket(`ws://localhost:8000/ws/${username}`);\r\n        websocketRef.current = ws;\r\n\r\n        ws.onopen = () => {\r\n            console.log('WebSocket connection opened');\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n            if (data.type === 'message') {\r\n                setMessages((prevMessages) => [...prevMessages, data.data]);\r\n            } else if (data.type === 'status') {\r\n                updateUserStatus(data.data);\r\n            }\r\n        };\r\n\r\n        ws.onclose = () => {\r\n            console.log('WebSocket connection closed');\r\n        };\r\n\r\n        ws.onerror = (error) => {\r\n            console.error('WebSocket error:', error);\r\n        };\r\n\r\n        return () => {\r\n            if (ws.readyState === WebSocket.OPEN) {\r\n                ws.close();\r\n            }\r\n        };\r\n    }, [username]);\r\n\r\n    const fetchUserStatuses = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/user_status');\r\n            const data = await response.json();\r\n            if (data && typeof data === 'object') {\r\n                setUserStatuses(data);\r\n            } else {\r\n                console.error('Invalid user status data:', data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching user statuses:', error);\r\n        }\r\n    };\r\n\r\n    const fetchGroupMessages = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/group_messages/opcode_convo');\r\n            const data = await response.json();\r\n            if (data && data.messages) {\r\n                setMessages(data.messages);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching group messages:', error);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (newMessage.trim() !== '') {\r\n            const message = {\r\n                user: username,\r\n                text: newMessage.trim(),\r\n                type: 'group',\r\n                room: 'opcode convo',\r\n            };\r\n\r\n            if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\r\n                websocketRef.current.send(JSON.stringify(message));\r\n                console.log('Sent message:', message);\r\n                setMessages((prevMessages) => [...prevMessages, message]);\r\n                setNewMessage(''); // Clear input after sending\r\n            } else {\r\n                console.error('WebSocket connection is not open');\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateUserStatus = (statusData) => {\r\n        setUserStatuses((prevStatuses) => ({ ...prevStatuses, ...statusData }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                <h3>Group Chat: opcode convo</h3>\r\n            </div>\r\n            <div className=\"chat-body\">\r\n                <div className=\"messages-list\">\r\n                    {messages.map((message, index) => (\r\n                        <div key={index} className=\"message-item\">\r\n                            <strong>{message.user}:</strong> {message.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"message-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type a message\"\r\n                />\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GroupChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}