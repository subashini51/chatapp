{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const {\n    username,\n    token\n  } = location.state || {};\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [chatType, setChatType] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [userStatuses, setUserStatuses] = useState({});\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    const fetchUserStatuses = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/user_status');\n        const data = await response.json();\n        setUserStatuses(data);\n      } catch (error) {\n        console.error('Error fetching user statuses:', error);\n      }\n    };\n    fetchUserStatuses();\n  }, []);\n  useEffect(() => {\n    if (username && token) {\n      const ws = new WebSocket(`ws://127.0.0.1:8000/ws/${username}`);\n      websocketRef.current = ws;\n      ws.onopen = () => {\n        console.log('WebSocket connection opened');\n      };\n      ws.onmessage = event => {\n        const message = JSON.parse(event.data);\n        if (message.type === 'message') {\n          if (chatType === 'group' || chatType === 'one-to-one' && message.user === selectedUser) {\n            setMessages(prevMessages => [...prevMessages, message.data]);\n          }\n        } else if (message.type === 'status') {\n          setUserStatuses(message.data);\n        }\n      };\n      ws.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      return () => {\n        ws.close();\n      };\n    }\n  }, [username, token, chatType, selectedUser]);\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      if (chatType === 'one-to-one' && selectedUser) {\n        websocketRef.current.send(JSON.stringify({\n          type: 'message',\n          user: selectedUser,\n          message: input\n        }));\n      } else if (chatType === 'group') {\n        websocketRef.current.send(JSON.stringify({\n          type: 'group',\n          message: input\n        }));\n      }\n      setInput('');\n    }\n  };\n  const handleUserSelect = user => {\n    setChatType('one-to-one');\n    setSelectedUser(user);\n  };\n  const handleGroupChat = () => {\n    setChatType('group');\n    setSelectedUser('opcode convo'); // Assign group name for clarity\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), Object.keys(userStatuses).map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user-item ${userStatuses[user] === 'online' ? 'online' : 'offline'}`,\n        onClick: () => handleUserSelect(user),\n        children: [user, \" - \", userStatuses[user]]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-item\",\n        onClick: handleGroupChat,\n        children: \"opcode convo - Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: chatType === 'one-to-one' ? `Chat with ${selectedUser}` : 'Group Chat: opcode convo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-item\",\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"lHcffk3qXosBLecs1fl0m/JNbXk=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","axios","jsxDEV","_jsxDEV","Chat","_s","location","username","token","state","messages","setMessages","input","setInput","chatType","setChatType","selectedUser","setSelectedUser","userStatuses","setUserStatuses","websocketRef","fetchUserStatuses","response","fetch","data","json","error","console","ws","WebSocket","current","onopen","log","onmessage","event","message","JSON","parse","type","user","prevMessages","onclose","onerror","close","sendMessage","trim","send","stringify","handleUserSelect","handleGroupChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","index","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// eslint-disable-next-line no-unused-vars\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n    const location = useLocation();\r\n    const { username, token } = location.state || {};\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [chatType, setChatType] = useState('');\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [userStatuses, setUserStatuses] = useState({});\r\n    const websocketRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserStatuses = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/user_status');\r\n                const data = await response.json();\r\n                setUserStatuses(data);\r\n            } catch (error) {\r\n                console.error('Error fetching user statuses:', error);\r\n            }\r\n        };\r\n\r\n        fetchUserStatuses();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (username && token) {\r\n            const ws = new WebSocket(`ws://127.0.0.1:8000/ws/${username}`);\r\n            websocketRef.current = ws;\r\n\r\n            ws.onopen = () => {\r\n                console.log('WebSocket connection opened');\r\n            };\r\n\r\n            ws.onmessage = (event) => {\r\n                const message = JSON.parse(event.data);\r\n                if (message.type === 'message') {\r\n                    if (chatType === 'group' || (chatType === 'one-to-one' && message.user === selectedUser)) {\r\n                        setMessages((prevMessages) => [...prevMessages, message.data]);\r\n                    }\r\n                } else if (message.type === 'status') {\r\n                    setUserStatuses(message.data);\r\n                }\r\n            };\r\n\r\n            ws.onclose = () => {\r\n                console.log('WebSocket connection closed');\r\n            };\r\n\r\n            ws.onerror = (error) => {\r\n                console.error('WebSocket error:', error);\r\n            };\r\n\r\n            return () => {\r\n                ws.close();\r\n            };\r\n        }\r\n    }, [username, token, chatType, selectedUser]);\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() !== '') {\r\n            if (chatType === 'one-to-one' && selectedUser) {\r\n                websocketRef.current.send(JSON.stringify({ type: 'message', user: selectedUser, message: input }));\r\n            } else if (chatType === 'group') {\r\n                websocketRef.current.send(JSON.stringify({ type: 'group', message: input }));\r\n            }\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    const handleUserSelect = (user) => {\r\n        setChatType('one-to-one');\r\n        setSelectedUser(user);\r\n    };\r\n\r\n    const handleGroupChat = () => {\r\n        setChatType('group');\r\n        setSelectedUser('opcode convo'); // Assign group name for clarity\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"users-list\">\r\n                <h3>Users</h3>\r\n                {Object.keys(userStatuses).map((user) => (\r\n                    <div\r\n                        key={user}\r\n                        className={`user-item ${userStatuses[user] === 'online' ? 'online' : 'offline'}`}\r\n                        onClick={() => handleUserSelect(user)}\r\n                    >\r\n                        {user} - {userStatuses[user]}\r\n                    </div>\r\n                ))}\r\n                <div\r\n                    className=\"user-item\"\r\n                    onClick={handleGroupChat}\r\n                >\r\n                    opcode convo - Group\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-box\">\r\n                <h3>{chatType === 'one-to-one' ? `Chat with ${selectedUser}` : 'Group Chat: opcode convo'}</h3>\r\n                <div className=\"messages-list\">\r\n                    {messages.map((message, index) => (\r\n                        <div key={index} className=\"message-item\">\r\n                            {message}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"input-box\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Type a message\"\r\n                    />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}