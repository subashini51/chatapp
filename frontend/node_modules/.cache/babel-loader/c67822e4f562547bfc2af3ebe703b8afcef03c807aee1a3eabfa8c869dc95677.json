{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Chat.css';\n\n// Import images based on usernames\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userProfilePics = {\n  suba: require('./images/Frame 11.png'),\n  sindhu: require('./images/Frame 11.png'),\n  dhamodhran: require('./images/Frame 10.png'),\n  leesa: require('./images/Frame 11.png'),\n  mohendran: require('./images/Frame 30.png'),\n  deepan: require('./images/Frame 12 (1).png'),\n  sathish: require('./images/Frame 12.png'),\n  opcodeconvo: require('./images/Frame 1.png')\n};\nconst allowedUsers = ['deepan', 'mohendran', 'leesa', 'sathish'];\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    username,\n    token\n  } = location.state || {};\n  const [messages, setMessages] = useState(() => {\n    const storedMessages = localStorage.getItem(`chatMessages_${username}`);\n    return storedMessages ? JSON.parse(storedMessages) : [];\n  });\n  const [input, setInput] = useState('');\n  const [chatType, setChatType] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [userStatuses, setUserStatuses] = useState({});\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    const fetchUserStatuses = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/user_status');\n        const data = await response.json();\n        if (data && typeof data === 'object') {\n          setUserStatuses(data);\n        } else {\n          console.error('Invalid user status data:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching user statuses:', error);\n      }\n    };\n    fetchUserStatuses();\n  }, []);\n  useEffect(() => {\n    if (username && token) {\n      const ws = new WebSocket(`ws://127.0.0.1:8000/ws/${username}`);\n      websocketRef.current = ws;\n      ws.onopen = () => {\n        console.log('WebSocket connection opened');\n      };\n      ws.onmessage = event => {\n        const message = JSON.parse(event.data);\n        console.log('Received message:', message);\n        if (message.type === 'message') {\n          setMessages(prevMessages => {\n            const updatedMessages = [...prevMessages, message.data];\n            localStorage.setItem(`chatMessages_${username}`, JSON.stringify(updatedMessages));\n            return updatedMessages;\n          });\n        } else if (message.type === 'status') {\n          setUserStatuses(message.data);\n        } else if (message.type === 'error') {\n          console.error(message.data);\n        }\n      };\n      ws.onclose = () => {\n        console.log('WebSocket connection closed');\n        setTimeout(() => {\n          console.log('Reconnecting...');\n          websocketRef.current = new WebSocket(`ws://127.0.0.1:8000/ws/${username}`);\n        }, 2000);\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      return () => {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.close();\n        }\n      };\n    }\n  }, [username, token]);\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      const message = {\n        type: chatType,\n        sender: username,\n        text: input.trim(),\n        recipient: chatType === 'one-to-one' ? selectedUser : undefined,\n        room: chatType === 'group' ? 'opcode_convo' : undefined\n      };\n      if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n        websocketRef.current.send(JSON.stringify(message));\n        console.log('Sent message:', message);\n        setMessages(prevMessages => {\n          const updatedMessages = [...prevMessages, message];\n          localStorage.setItem(`chatMessages_${username}`, JSON.stringify(updatedMessages));\n          return updatedMessages;\n        });\n        setInput(''); // Clear input after sending\n      } else {\n        console.error('WebSocket connection is not open');\n      }\n    }\n  };\n  const handleUserSelect = user => {\n    setChatType('one-to-one');\n    setSelectedUser(user);\n    const storedMessages = localStorage.getItem(`chatMessages_${username}_${user}`);\n    setMessages(storedMessages ? JSON.parse(storedMessages) : []);\n  };\n  const handleGroupChat = () => {\n    if (allowedUsers.includes(username)) {\n      setChatType('group');\n      setSelectedUser('opcode_convo');\n      fetchGroupMessages();\n      navigate('/group-chat', {\n        state: {\n          username\n        }\n      });\n    } else {\n      alert('You are not allowed to access the group chat.');\n    }\n  };\n  const fetchGroupMessages = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/group_messages/opcode_convo');\n      const data = await response.json();\n      if (data && data.messages) {\n        setMessages(data.messages);\n      }\n    } catch (error) {\n      console.error('Error fetching group messages:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"users-list\",\n        children: [Object.keys(userStatuses).length > 0 ? Object.keys(userStatuses).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `user-item ${userStatuses[user] === 'online' ? 'online' : 'offline'}`,\n          onClick: () => handleUserSelect(user),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userProfilePics[user],\n            alt: `${user} profile`,\n            className: \"profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-dot ${userStatuses[user]}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-status-text\",\n                children: userStatuses[user]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this)]\n        }, user, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No users available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"user-item\",\n          onClick: handleGroupChat,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userProfilePics['opcodeconvo'],\n            alt: \"opcode convo group\",\n            className: \"profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: \"opcode convo - Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-dot online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-status-text\",\n                children: \"Online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userProfilePics[username],\n            alt: `${username} profile`,\n            className: \"profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-dot ${userStatuses[username]}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-status-text\",\n                children: userStatuses[username]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: chatType === 'one-to-one' ? `Chat with ${selectedUser}` : 'Group Chat: opcode convo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === username ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [message.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), \" \", message.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"KOt6QACx98BaiO/MG9MY9xZ5tnk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","useNavigate","jsxDEV","_jsxDEV","userProfilePics","suba","require","sindhu","dhamodhran","leesa","mohendran","deepan","sathish","opcodeconvo","allowedUsers","Chat","_s","location","navigate","username","token","state","messages","setMessages","storedMessages","localStorage","getItem","JSON","parse","input","setInput","chatType","setChatType","selectedUser","setSelectedUser","userStatuses","setUserStatuses","websocketRef","fetchUserStatuses","response","fetch","data","json","console","error","ws","WebSocket","current","onopen","log","onmessage","event","message","type","prevMessages","updatedMessages","setItem","stringify","onclose","setTimeout","onerror","readyState","OPEN","close","sendMessage","trim","sender","text","recipient","undefined","room","send","handleUserSelect","user","handleGroupChat","includes","fetchGroupMessages","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","map","onClick","src","alt","index","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\n// Import images based on usernames\r\nconst userProfilePics = {\r\n    suba: require('./images/Frame 11.png'),\r\n    sindhu: require('./images/Frame 11.png'),\r\n    dhamodhran: require('./images/Frame 10.png'),\r\n    leesa: require('./images/Frame 11.png'),\r\n    mohendran: require('./images/Frame 30.png'),\r\n    deepan: require('./images/Frame 12 (1).png'),\r\n    sathish: require('./images/Frame 12.png'),\r\n    opcodeconvo: require('./images/Frame 1.png'),\r\n};\r\n\r\nconst allowedUsers = ['deepan', 'mohendran', 'leesa', 'sathish'];\r\n\r\nconst Chat = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { username, token } = location.state || {};\r\n    const [messages, setMessages] = useState(() => {\r\n        const storedMessages = localStorage.getItem(`chatMessages_${username}`);\r\n        return storedMessages ? JSON.parse(storedMessages) : [];\r\n    });\r\n    const [input, setInput] = useState('');\r\n    const [chatType, setChatType] = useState('');\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [userStatuses, setUserStatuses] = useState({});\r\n    const websocketRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserStatuses = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/user_status');\r\n                const data = await response.json();\r\n                if (data && typeof data === 'object') {\r\n                    setUserStatuses(data);\r\n                } else {\r\n                    console.error('Invalid user status data:', data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching user statuses:', error);\r\n            }\r\n        };\r\n\r\n        fetchUserStatuses();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (username && token) {\r\n            const ws = new WebSocket(`ws://127.0.0.1:8000/ws/${username}`);\r\n            websocketRef.current = ws;\r\n\r\n            ws.onopen = () => {\r\n                console.log('WebSocket connection opened');\r\n            };\r\n\r\n            ws.onmessage = (event) => {\r\n                const message = JSON.parse(event.data);\r\n                console.log('Received message:', message);\r\n                if (message.type === 'message') {\r\n                    setMessages((prevMessages) => {\r\n                        const updatedMessages = [...prevMessages, message.data];\r\n                        localStorage.setItem(`chatMessages_${username}`, JSON.stringify(updatedMessages));\r\n                        return updatedMessages;\r\n                    });\r\n                } else if (message.type === 'status') {\r\n                    setUserStatuses(message.data);\r\n                } else if (message.type === 'error') {\r\n                    console.error(message.data);\r\n                }\r\n            };\r\n\r\n            ws.onclose = () => {\r\n                console.log('WebSocket connection closed');\r\n                setTimeout(() => {\r\n                    console.log('Reconnecting...');\r\n                    websocketRef.current = new WebSocket(`ws://127.0.0.1:8000/ws/${username}`);\r\n                }, 2000);\r\n            };\r\n\r\n            ws.onerror = (error) => {\r\n                console.error('WebSocket error:', error);\r\n            };\r\n\r\n            return () => {\r\n                if (ws.readyState === WebSocket.OPEN) {\r\n                    ws.close();\r\n                }\r\n            };\r\n        }\r\n    }, [username, token]);\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() !== '') {\r\n            const message = {\r\n                type: chatType,\r\n                sender: username,\r\n                text: input.trim(),\r\n                recipient: chatType === 'one-to-one' ? selectedUser : undefined,\r\n                room: chatType === 'group' ? 'opcode_convo' : undefined,\r\n            };\r\n\r\n            if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\r\n                websocketRef.current.send(JSON.stringify(message));\r\n                console.log('Sent message:', message);\r\n                setMessages((prevMessages) => {\r\n                    const updatedMessages = [...prevMessages, message];\r\n                    localStorage.setItem(`chatMessages_${username}`, JSON.stringify(updatedMessages));\r\n                    return updatedMessages;\r\n                });\r\n                setInput(''); // Clear input after sending\r\n            } else {\r\n                console.error('WebSocket connection is not open');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUserSelect = (user) => {\r\n        setChatType('one-to-one');\r\n        setSelectedUser(user);\r\n        const storedMessages = localStorage.getItem(`chatMessages_${username}_${user}`);\r\n        setMessages(storedMessages ? JSON.parse(storedMessages) : []);\r\n    };\r\n\r\n    const handleGroupChat = () => {\r\n        if (allowedUsers.includes(username)) {\r\n            setChatType('group');\r\n            setSelectedUser('opcode_convo');\r\n            fetchGroupMessages();\r\n            navigate('/group-chat', { state: { username } });\r\n        } else {\r\n            alert('You are not allowed to access the group chat.');\r\n        }\r\n    };\r\n\r\n    const fetchGroupMessages = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/group_messages/opcode_convo');\r\n            const data = await response.json();\r\n            if (data && data.messages) {\r\n                setMessages(data.messages);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching group messages:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"sidebar\">\r\n                <h3>Users</h3>\r\n                <ul className=\"users-list\">\r\n                    {Object.keys(userStatuses).length > 0 ? (\r\n                        Object.keys(userStatuses).map((user) => (\r\n                            <li\r\n                                key={user}\r\n                                className={`user-item ${userStatuses[user] === 'online' ? 'online' : 'offline'}`}\r\n                                onClick={() => handleUserSelect(user)}\r\n                            >\r\n                                <img src={userProfilePics[user]} alt={`${user} profile`} className=\"profile-pic\" />\r\n                                <div className=\"user-info\">\r\n                                    <span className=\"username\">{user}</span>\r\n                                    <div className=\"status-container\">\r\n                                        <span className={`status-dot ${userStatuses[user]}`}></span>\r\n                                        <span className=\"user-status-text\">{userStatuses[user]}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        <li>No users available</li>\r\n                    )}\r\n                    <li className=\"user-item\" onClick={handleGroupChat}>\r\n                        <img src={userProfilePics['opcodeconvo']} alt=\"opcode convo group\" className=\"profile-pic\" />\r\n                        <div className=\"user-info\">\r\n                            <span className=\"username\">opcode convo - Group</span>\r\n                            <div className=\"status-container\">\r\n                                <span className=\"status-dot online\"></span>\r\n                                <span className=\"user-status-text\">Online</span>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"chat-content\">\r\n                <div className=\"chat-header\">\r\n                    <div className=\"user-info\">\r\n                        <img src={userProfilePics[username]} alt={`${username} profile`} className=\"profile-pic\" />\r\n                        <div className=\"username-status\">\r\n                            <span className=\"username\">{username}</span>\r\n                            <div className=\"status-container\">\r\n                                <span className={`status-dot ${userStatuses[username]}`}></span>\r\n                                <span className=\"user-status-text\">{userStatuses[username]}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h3>{chatType === 'one-to-one' ? `Chat with ${selectedUser}` : 'Group Chat: opcode convo'}</h3>\r\n                </div>\r\n                <div className=\"messages-container\">\r\n                    {messages.map((message, index) => (\r\n                        <div key={index} className={`message ${message.sender === username ? 'sent' : 'received'}`}>\r\n                            <p>\r\n                                <strong>{message.sender}:</strong> {message.text}\r\n                            </p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}