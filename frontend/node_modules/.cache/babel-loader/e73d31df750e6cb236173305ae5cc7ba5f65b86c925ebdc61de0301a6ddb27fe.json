{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\frontend\\\\src\\\\components\\\\UpdateUser.js\",\n  _s = $RefreshSig$();\n// src/components/UpdateUser.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './UserForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateUser = () => {\n  _s();\n  const [formState, setFormState] = useState({\n    username: '',\n    newUsername: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormState(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://127.0.0.1:8000/users/${formState.username}`, {\n        username: formState.newUsername,\n        password: formState.password\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('Error updating user: ' + error.response.data.detail);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Current Username\",\n        value: formState.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"newUsername\",\n        placeholder: \"New Username\",\n        value: formState.newUsername,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"New Password\",\n        value: formState.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateUser, \"mC6JRlnIXU9NO7RcAU/iAKIEmBE=\");\n_c = UpdateUser;\nexport default UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdateUser","_s","formState","setFormState","username","newUsername","password","message","setMessage","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","response","put","data","error","detail","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/bot/frontend/src/components/UpdateUser.js"],"sourcesContent":["// src/components/UpdateUser.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './UserForm.css';\r\n\r\nconst UpdateUser = () => {\r\n    const [formState, setFormState] = useState({ username: '', newUsername: '', password: '' });\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormState((prevState) => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.put(`http://127.0.0.1:8000/users/${formState.username}`, {\r\n                username: formState.newUsername,\r\n                password: formState.password\r\n            });\r\n            setMessage(response.data.message);\r\n        } catch (error) {\r\n            setMessage('Error updating user: ' + error.response.data.detail);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h2>Update User</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Current Username\"\r\n                    value={formState.username}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"newUsername\"\r\n                    placeholder=\"New Username\"\r\n                    value={formState.newUsername}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"New Password\"\r\n                    value={formState.password}\r\n                    onChange={handleChange}\r\n                />\r\n                <button type=\"submit\">Update</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}